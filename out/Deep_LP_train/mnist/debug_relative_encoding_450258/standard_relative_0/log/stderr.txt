/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  ../torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
/geode2/home/u080/skarukas/Carbonate/SITH/models/other_layers/interpolation.py:5: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  x = torch.tensor(x)
/geode2/home/u080/skarukas/Carbonate/SITH/models/other_layers/interpolation.py:6: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  y = torch.tensor(y)
/geode2/home/u080/skarukas/Carbonate/SITH/models/other_layers/ShiftedConv2d.py:33: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.shifts = torch.tensor(shifts)
Epoch:   0%|          | 0/40 [00:00<?, ?it/s]Epoch:   0%|          | 0/40 [00:03<?, ?it/s]
Traceback (most recent call last):
  File "/geode2/home/u080/skarukas/Carbonate/SITH/train.py", line 250, in <module>
    train_loop(model, train_dataloader, config, val_dataloader)
  File "/geode2/home/u080/skarukas/Carbonate/SITH/train.py", line 59, in train_loop
    yh = model(x)
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/geode2/home/u080/skarukas/Carbonate/SITH/models/DeepLogPolarClassifier.py", line 60, in forward
    out = self._forward_batch(inp)
  File "/geode2/home/u080/skarukas/Carbonate/SITH/models/DeepLogPolarClassifier.py", line 95, in _forward_batch
    x = self.lpconv_layers[i](x)
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/geode2/home/u080/skarukas/Carbonate/SITH/models/logpolar/layers.py", line 214, in forward
    # Outputs as (Batch, x', y', features', tau', theta')
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/geode2/home/u080/skarukas/Carbonate/SITH/models/logpolar/layers.py", line 155, in forward
    weights = x.float()
AttributeError: module 'torch' has no attribute 'mod'
