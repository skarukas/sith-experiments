/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  ../torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
Epoch:   0%|          | 0/40 [00:00<?, ?it/s]
Batch:   0%|          | 0/1875 [00:00<?, ?it/s][A
                                               [AEpoch:   0%|          | 0/40 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/geode2/home/u080/skarukas/Carbonate/SITH/train.py", line 222, in <module>
    train_loop(model, train_dataloader, config, val_dataloader)
  File "/geode2/home/u080/skarukas/Carbonate/SITH/train.py", line 48, in train_loop
    train_loss.update(loss.item())
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/serialization.py", line 379, in save
    _save(obj, opened_zipfile, pickle_module, pickle_protocol)
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/serialization.py", line 496, in _save
    storage = storage.cpu()
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/storage.py", line 72, in cpu
    return self.type(getattr(torch, self.__class__.__name__))
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/cuda/__init__.py", line 540, in type
    return super(_CudaBase, self).type(*args, **kwargs)  # type: ignore[misc]
  File "/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torch/_utils.py", line 45, in _type
    return dtype(self.size()).copy_(self, non_blocking)
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
