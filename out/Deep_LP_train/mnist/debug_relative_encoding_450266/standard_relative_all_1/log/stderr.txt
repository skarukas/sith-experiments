/N/soft/sles15/deeplearning/Python-3.9.7/lib/python3.9/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  ../torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
/geode2/home/u080/skarukas/Carbonate/SITH/models/other_layers/interpolation.py:5: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  x = torch.tensor(x)
/geode2/home/u080/skarukas/Carbonate/SITH/models/other_layers/interpolation.py:6: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  y = torch.tensor(y)
/geode2/home/u080/skarukas/Carbonate/SITH/models/other_layers/ShiftedConv2d.py:33: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.shifts = torch.tensor(shifts)
Epoch:   0%|          | 0/40 [00:00<?, ?it/s]
Batch:   0%|          | 0/3750 [00:00<?, ?it/s][A
Batch:   2%|1         | 64/3750 [00:10<09:37,  6.39it/s, train_loss=nan, train_acc=0.125, avg_tr_acc=0.0908, avg_tr_loss=nan][A
Batch:   4%|3         | 136/3750 [00:20<08:48,  6.84it/s, train_loss=nan, train_acc=0.125, avg_tr_acc=0.102, avg_tr_loss=nan][A
Batch:   6%|5         | 208/3750 [00:30<08:27,  6.99it/s, train_loss=nan, train_acc=0.0625, avg_tr_acc=0.102, avg_tr_loss=nan][A
Batch:   7%|7         | 280/3750 [00:40<08:11,  7.05it/s, train_loss=nan, train_acc=0.0625, avg_tr_acc=0.102, avg_tr_loss=nan][A
Batch:   9%|9         | 352/3750 [00:50<07:59,  7.09it/s, train_loss=nan, train_acc=0.0625, avg_tr_acc=0.0998, avg_tr_loss=nan][A
Batch:  11%|#1        | 424/3750 [01:00<07:47,  7.11it/s, train_loss=nan, train_acc=0.25, avg_tr_acc=0.102, avg_tr_loss=nan]   [A
Batch:  13%|#3        | 496/3750 [01:10<07:36,  7.13it/s, train_loss=nan, train_acc=0.188, avg_tr_acc=0.0999, avg_tr_loss=nan][A
Batch:  15%|#5        | 568/3750 [01:20<07:25,  7.14it/s, train_loss=nan, train_acc=0.125, avg_tr_acc=0.0984, avg_tr_loss=nan][A